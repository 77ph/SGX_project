enclave {
    from "sgx_tstdc.edl" import *;
    from "sgx_tprotected_fs.edl" import *;

    trusted {
        // Enclave initialization
        public sgx_status_t sgx_ecall_initialize();

        // Простая тестовая функция
        public int ecall_test_function();

        // Упрощенная подпись (без передачи приватного ключа)
        public int ecall_sign_transaction([in, size=32] const uint8_t* tx_hash,
                                      size_t tx_hash_size,
                                      [out, size=64] uint8_t* signature,
                                      size_t signature_size);

        // Account management functions
        // public int ecall_generate_account(void);  // Removed as it's now internal
        // public int ecall_save_account([in, string] const char* account_id);  // Removed as deprecated
        public int ecall_load_account([in, string] const char* account_id);
        public int ecall_sign_message([in, size=message_len] const uint8_t* message, size_t message_len,
                                     [out, size=signature_len] uint8_t* signature, size_t signature_len);

        // Account pool management
        public int ecall_load_account_to_pool([in, string] const char* account_id);
        public int ecall_unload_account_from_pool([in, string] const char* account_id);
        public int ecall_sign_with_pool_account([in, string] const char* account_id,
                                             [in, size=message_len] const uint8_t* message, size_t message_len,
                                             [out, size=signature_len] uint8_t* signature, size_t signature_len);
        public int ecall_get_pool_status([out] uint32_t* total_accounts,
                                       [out] uint32_t* active_accounts,
                                       [out, size=4300] char* account_addresses);

        // Новая функция для генерации аккаунта в пул
        public int ecall_generate_account_to_pool([out, size=42] char* account_address);

        // Test functions
        // public int ecall_test_entropy([out, size=size] uint8_t* entropy, size_t size);
        // public int ecall_test_save_load();
        // public int ecall_test_sign_verify();

        public int ecall_set_log_level(int level);
    };

    untrusted {
        void ocall_print([in, string] const char* str);
        
        // File operations
        int ocall_save_to_file([in, size=size] const uint8_t* data,
                             size_t size,
                             [in, string] const char* filename);
        
        int ocall_read_from_file([out, size=size] uint8_t* data,
                               size_t size,
                               [in, string] const char* filename);
    };
};
